// <auto-generated />
using System;
using HospiEnCasaMascotas.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospiEnCasaMascotas.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210921151805_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Antecedentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entorno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SugerenciaCuidadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SugerenciaCuidadoId");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AuxiliarVeterinarioId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fechanacimineto")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<int?>("PropietarioId")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<int?>("SignovitalId")
                        .HasColumnType("int");

                    b.Property<float>("Talla")
                        .HasColumnType("real");

                    b.Property<int?>("VeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuxiliarVeterinarioId");

                    b.HasIndex("HistoriaId");

                    b.HasIndex("PropietarioId");

                    b.HasIndex("SignovitalId");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.SignoVital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SignoVitalId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SignoVitalId");

                    b.ToTable("SignosVitales");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.SugerenciaCuidado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SugerenciasCuidados");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.AuxiliarVeterinario", b =>
                {
                    b.HasBaseType("HospiEnCasaMascotas.App.Dominio.Persona");

                    b.Property<int>("HorasLaborales")
                        .HasColumnType("int");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AuxiliarVeterinario");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("HospiEnCasaMascotas.App.Dominio.Persona");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Latitud")
                        .HasColumnType("real");

                    b.Property<float>("Longitud")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("HospiEnCasaMascotas.App.Dominio.Persona");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Veterinario_TarjetaProfesional");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.Historia", b =>
                {
                    b.HasOne("HospiEnCasaMascotas.App.Dominio.SugerenciaCuidado", "SugerenciaCuidado")
                        .WithMany()
                        .HasForeignKey("SugerenciaCuidadoId");

                    b.Navigation("SugerenciaCuidado");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.Paciente", b =>
                {
                    b.HasOne("HospiEnCasaMascotas.App.Dominio.AuxiliarVeterinario", "AuxiliarVeterinario")
                        .WithMany()
                        .HasForeignKey("AuxiliarVeterinarioId");

                    b.HasOne("HospiEnCasaMascotas.App.Dominio.Historia", "Historia")
                        .WithMany()
                        .HasForeignKey("HistoriaId");

                    b.HasOne("HospiEnCasaMascotas.App.Dominio.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioId");

                    b.HasOne("HospiEnCasaMascotas.App.Dominio.SignoVital", "Signovital")
                        .WithMany()
                        .HasForeignKey("SignovitalId");

                    b.HasOne("HospiEnCasaMascotas.App.Dominio.Veterinario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioId");

                    b.Navigation("AuxiliarVeterinario");

                    b.Navigation("Historia");

                    b.Navigation("Propietario");

                    b.Navigation("Signovital");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.SignoVital", b =>
                {
                    b.HasOne("HospiEnCasaMascotas.App.Dominio.SignoVital", null)
                        .WithMany("SignosVitales")
                        .HasForeignKey("SignoVitalId");
                });

            modelBuilder.Entity("HospiEnCasaMascotas.App.Dominio.SignoVital", b =>
                {
                    b.Navigation("SignosVitales");
                });
#pragma warning restore 612, 618
        }
    }
}
